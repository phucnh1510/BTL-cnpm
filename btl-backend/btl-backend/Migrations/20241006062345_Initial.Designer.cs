// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using btl_backend.Data;

#nullable disable

namespace btl_backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241006062345_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("btl_backend.Models.Class", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ClassId"));

                    b.HasKey("ClassId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("btl_backend.Models.Problem", b =>
                {
                    b.Property<int>("ProblemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProblemID"));

                    b.Property<int?>("ClassId")
                        .HasColumnType("integer");

                    b.Property<string[]>("Code")
                        .HasColumnType("text[]");

                    b.Property<string>("ProblemContent")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ProblemName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("ProblemID");

                    b.HasIndex("ClassId");

                    b.ToTable("Problems");
                });

            modelBuilder.Entity("btl_backend.Models.Submission", b =>
                {
                    b.Property<int>("SubmissionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SubmissionID"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<decimal>("ExecutionTime")
                        .HasColumnType("numeric");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<decimal>("Memory")
                        .HasColumnType("numeric");

                    b.Property<int?>("ProblemID")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime>("SubmissionTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("SubmissionID");

                    b.HasIndex("ProblemID");

                    b.HasIndex("UserId");

                    b.ToTable("Submissions");
                });

            modelBuilder.Entity("btl_backend.Models.TestCase", b =>
                {
                    b.Property<int>("TestCaseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TestCaseID"));

                    b.Property<string>("Input")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Output")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("ProblemID")
                        .HasColumnType("integer");

                    b.HasKey("TestCaseID");

                    b.HasIndex("ProblemID");

                    b.ToTable("TestCases");
                });

            modelBuilder.Entity("btl_backend.Models.Topic", b =>
                {
                    b.Property<int>("TopicID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TopicID"));

                    b.Property<int?>("ProblemID")
                        .HasColumnType("integer");

                    b.Property<string>("TopicContent")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("TopicName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("TopicID");

                    b.HasIndex("ProblemID");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("btl_backend.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<int?>("ClassId")
                        .HasColumnType("integer");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("UserId");

                    b.HasIndex("ClassId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("btl_backend.Models.Problem", b =>
                {
                    b.HasOne("btl_backend.Models.Class", null)
                        .WithMany("Problem")
                        .HasForeignKey("ClassId");
                });

            modelBuilder.Entity("btl_backend.Models.Submission", b =>
                {
                    b.HasOne("btl_backend.Models.Problem", "Problem")
                        .WithMany()
                        .HasForeignKey("ProblemID");

                    b.HasOne("btl_backend.Models.User", "User")
                        .WithMany("Submissions")
                        .HasForeignKey("UserId");

                    b.Navigation("Problem");

                    b.Navigation("User");
                });

            modelBuilder.Entity("btl_backend.Models.TestCase", b =>
                {
                    b.HasOne("btl_backend.Models.Problem", null)
                        .WithMany("TestCases")
                        .HasForeignKey("ProblemID");
                });

            modelBuilder.Entity("btl_backend.Models.Topic", b =>
                {
                    b.HasOne("btl_backend.Models.Problem", null)
                        .WithMany("Topics")
                        .HasForeignKey("ProblemID");
                });

            modelBuilder.Entity("btl_backend.Models.User", b =>
                {
                    b.HasOne("btl_backend.Models.Class", null)
                        .WithMany("User")
                        .HasForeignKey("ClassId");
                });

            modelBuilder.Entity("btl_backend.Models.Class", b =>
                {
                    b.Navigation("Problem");

                    b.Navigation("User");
                });

            modelBuilder.Entity("btl_backend.Models.Problem", b =>
                {
                    b.Navigation("TestCases");

                    b.Navigation("Topics");
                });

            modelBuilder.Entity("btl_backend.Models.User", b =>
                {
                    b.Navigation("Submissions");
                });
#pragma warning restore 612, 618
        }
    }
}
